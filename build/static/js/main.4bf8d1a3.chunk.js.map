{"version":3,"sources":["Button.js","App.js","reportWebVitals.js","index.js"],"names":["StyledButton","theme","borderRadius","color","disabled","Button","children","primary","secondary","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAIMA,EAAY,yEAEC,qBAAGC,MAAkBC,eAFtB,sBAGI,gBAAGD,EAAH,EAAGA,MAAOE,EAAV,EAAUA,MAAV,OAAsBF,EAAME,MAAMA,KAHtC,KAKd,qBAAGC,UACK,IANM,KAcLC,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxC,OACE,cAACJ,EAAD,CAAcG,MAAOA,EAAOC,SAAUA,EAAtC,SACGE,KClBDL,EAAQ,CACZC,aAAc,MACdC,MAAO,CACLI,QAAS,YACTC,UAAW,eAIFC,EAAM,WACjB,OACE,eAAC,IAAD,CAAeR,MAAOA,EAAtB,UACE,cAAC,EAAD,CAAQE,MAAM,UAAd,qBACA,cAAC,EAAD,CAAQA,MAAM,YAAd,uBACA,cAAC,EAAD,CAAQA,MAAM,UAAUC,UAAQ,EAAhC,8BAGA,cAAC,EAAD,CAAQD,MAAM,YAAYC,UAAQ,EAAlC,oCCPSM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bf8d1a3.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/react\";\n\nconst StyledButton = styled.button`\n  padding: 10px;\n  border-radius: ${({ theme }) => theme.borderRadius};\n  background-color: ${({ theme, color }) => theme.color[color]};\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      opacity: 0.5;\n      filter: grayscale(100%);\n      pointer-events: none;\n    `}\n`;\n\nexport const Button = ({ children, color, disabled }) => {\n  return (\n    <StyledButton color={color} disabled={disabled}>\n      {children}\n    </StyledButton>\n  );\n};\n","import { ThemeProvider } from \"@emotion/react\";\nimport { Button } from \"./Button\";\n\nconst theme = {\n  borderRadius: \"3px\",\n  color: {\n    primary: \"lightblue\",\n    secondary: \"lightgreen\",\n  },\n};\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button color=\"primary\">Primary</Button>\n      <Button color=\"secondary\">Secondary</Button>\n      <Button color=\"primary\" disabled>\n        Primary disabled\n      </Button>\n      <Button color=\"secondary\" disabled>\n        Secondary disabled\n      </Button>\n    </ThemeProvider>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}